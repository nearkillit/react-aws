// const intialEventState: subEventType = {
//   id: "test",
//   name: "テストイベント",
//   time: 60,
//   manager: "テスト担当者",
//   color: "#FFF",
//   people: 20,
//   days: [
//     { start_time: "18:00:00.000", dow: 1},
//     { start_time: "19:00:00.000", dow: 3},
//     { start_time: "17:30:00.000", dow: 5},
//   ],
//   updatedAt: "2021-11-18T23:24:52.785Z"
// }

########  function ########


// 画像の処理 //
async function onChange(e) {
    if (!e.target.files[0]) return
    const file = e.target.files[0];
    setFormData({ ...formData, image: file.name });
    await Storage.put(file.name, file);    
    fetchTodos();
}
await Promise.all(todosFromAPI.map(async Todo => {
      if (Todo.image) {
        const image = await Storage.get(Todo.image);      
        Todo.image = image;
      }
      return Todo;
    }))

// Todoの追加 //
async function createTodo() {
    if (!formData.name || !formData.description) return;
    await API.graphql({ query: createTodoMutation, variables: { input: formData } });
    if (formData.image) {
      const image = await Storage.get(formData.image);      
      formData.image = image;
    }
    setTodos([ ...Todos, formData ]);
    setFormData(initialFormState);
  }

// Todoの削除 //
  async function deleteTodo({ id }) {   
    const newTodosArray = Todos.filter(Todo => Todo.id !== id);
    setTodos(newTodosArray);
    await API.graphql({ query: deleteTodoMutation, variables: { input: { id } }});
  }

########  DOM  ########

<h1>My Todos App</h1>      
      <input
        onChange={e => setFormData({ ...formData, 'name': e.target.value})}
        placeholder="Todo name"
        value={formData.name}
      />
      <input
        onChange={e => setFormData({ ...formData, 'description': e.target.value})}
        placeholder="Todo description"
        value={formData.description}
      />
      <input
        type="file"
        onChange={onChange}
      />
      <button onClick={createTodo}>Create Todo</button>
      <button onClick={testAddSubEvent}>testAddSubEvent</button>
      <div style={{marginBottom: 30}}>
        {
          Todos.map(Todo => (
          <div key={Todo.id || Todo.name}>
            <span>{Todo.id}</span>
            <h2>{Todo.name}</h2>
            <p>{Todo.description}</p>
            <button onClick={() => deleteTodo(Todo)}>Delete Todo</button>
            {
              Todo.image && <img src={Todo.image} style={{width: 400}} />
            }
          </div>
          ))
        }